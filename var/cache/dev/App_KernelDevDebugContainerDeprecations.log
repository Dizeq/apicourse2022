a:14:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:309:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Events\CustomerUserSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:93:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Events\InvoiceChronoSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:93:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:312:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Events\PasswordEncoderSubscriber" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:93:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:318:"Method "Symfony\Component\Serializer\Normalizer\NormalizerInterface::supportsNormalization()" might add "bool" as a native return type declaration in the future. Do the same in implementation "App\Serializer\PatchedDateTimeNormalizer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:93:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:322:"Method "Symfony\Component\Serializer\Normalizer\DenormalizerInterface::supportsDenormalization()" might add "bool" as a native return type declaration in the future. Do the same in implementation "App\Serializer\PatchedDateTimeNormalizer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:93:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:355:"Method "Symfony\Component\Config\Definition\ConfigurationInterface::getConfigTreeBuilder()" might add "TreeBuilder" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Core\Bridge\Symfony\Bundle\DependencyInjection\Configuration" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:93:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:173:"Since api-platform/core 2.6: The use of the `collection.pagination.enabled` has been deprecated in 2.6 and will be removed in 3.0. Use `defaults.pagination_enabled` instead.";s:4:"file";s:90:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:241;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:89:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:455;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:187:"Since api-platform/core 2.6: The use of the `collection.pagination.client_enabled` has been deprecated in 2.6 and will be removed in 3.0. Use `defaults.pagination_client_enabled` instead.";s:4:"file";s:90:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:241;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:89:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:455;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:201:"Since api-platform/core 2.6: The use of the `collection.pagination.client_items_per_page` has been deprecated in 2.6 and will be removed in 3.0. Use `defaults.pagination_client_items_per_page` instead.";s:4:"file";s:90:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:241;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:89:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:455;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:9;a:6:{s:4:"type";i:16384;s:7:"message";s:187:"Since api-platform/core 2.6: The use of the `collection.pagination.items_per_page` has been deprecated in 2.6 and will be removed in 3.0. Use `defaults.pagination_items_per_page` instead.";s:4:"file";s:90:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:241;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:89:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:455;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:10;a:6:{s:4:"type";i:16384;s:7:"message";s:226:"The "Symfony\Bridge\Doctrine\Logger\DbalLogger" class implements "Doctrine\DBAL\Logging\SQLLogger" that is deprecated Use {@link \Doctrine\DBAL\Logging\Middleware} or implement {@link \Doctrine\DBAL\Driver\Middleware} instead.";s:4:"file";s:93:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "ApiPlatform\Core\JsonSchema\Command\JsonSchemaGenerateCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:93:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "ApiPlatform\Core\Bridge\Symfony\Bundle\Command\OpenApiCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:93:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "ApiPlatform\Core\Bridge\Symfony\Bundle\Command\SwaggerCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:93:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:101:"/Volumes/T7 Touch/PHP/API2022/apicourse2021/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}}